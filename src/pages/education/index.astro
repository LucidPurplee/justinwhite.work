---
// astro components
import Root from "../../components/layouts/coreLayout.astro";
import Sidenav from "../../components/layouts/sideToolbar.astro";
import Cell from "../../components/bento/baseCell.astro";
import AnimatedCell from "../../components/bento/animatedCell.astro";
import Footer from "../../components/layouts/coreFooter.astro";
import Header from "../../components/layouts/headerToolbar.astro";

// react components
import Modal from "../../components/modal/modal.jsx";

// Server-side achievement data
import achievements from "../../components/achievements";
---

<Root title="Education - Justinwhite.work" bgimgurl="/backgrounds/defbg4.png">
  <div class="flex flex-col h-screen w-screen gap-2 p-2">
    <Header />

    <div class="flex flex-1 gap-2 min-h-0">
      <aside class="menu w-20 hidden md:block">
        <Sidenav />
      </aside>

      <main class="card flex-1 overflow-y-auto overflow-x-hidden pr-2">
        <div class="flex flex-wrap h-full gap-4">
          {
            achievements.map((ach, i) => (
              <div key={i} class={`flex flex-col flex-1 ${ach.customClass}`}>
                {/* Achievement card */}
                 {/* Modal for this achievement */}
                  {ach.useModal && (<Modal
                    key={i}
                    title={ach.modalTitle ?? ach.title}   // ðŸ‘ˆ fallback logic
                    tag={ach.tag ? `#${ach.tag}` : undefined}
                    renderURL={ach.renderLink}
                    fullscreenNewTab={ach.useNewTab}
                    client:load
                  />)}
                <a
                  href={ach.useModal ? ach.link : ach.renderLink}
                  target={ach.useNewTab ? "_blank" : undefined}
                  rel={ach.useNewTab ? "noopener noreferrer" : undefined}
                  class="flex flex-col flex-1"
                >
                  <AnimatedCell
                    class={`flex flex-col justify-between p-2 bg-base-100/40 hover:bg-base-100/60 ${ach.customClass}`}
                  >
                    <div class="space-y-4 flex-1">
                      <h2 class="text-2xl font-bold text-primary flex flex-wrap items-center gap-2">
                        {ach.badges.map((b, j) => (
                          <span
                            key={j}
                            class={`badge ${j === ach.badges.length - 1 ? "badge-primary" : "badge-outline"}`}
                          >
                            {b}
                          </span>
                        ))}
                        {ach.title}
                      </h2>

                      <p class="text-sm text-primary opacity-80">
                        {ach.description}
                      </p>
                    </div>

                    {ach.imageLink && (
                      <div class="p-4 rounded-3xl max-h-48 bg-base-100/10 border-2 border-base-100/10 flex justify-center items-center overflow-hidden">
                        <img
                          src={ach.imageLink}
                          alt={`${ach.title} certificate`}
                          class={`rounded-2xl max-h-full outline-2 outline-base-100/20 ${ach.imageStyle || ""}`}
                        />
                      </div>
                    )}

                    <span class="text-xs font-light text-gray-500 mt-3">
                      {ach.date}
                    </span>
                  </AnimatedCell>
                </a>
              </div>
            ))
          }

          {/* Footer Card */}
          <Cell class="bg-transparent max-w-full">
            <Footer class="bg-transparent min-w-[90vw] max-w-full" />
          </Cell>
        </div>
      </main>
    </div>
  </div>
</Root>
