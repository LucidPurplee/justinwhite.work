---
import Root from "../../components/layouts/coreLayout.astro";
import Sidenav from "../../components/layouts/sideToolbar.astro";
import Cell from "../../components/bento/baseCell.astro";
import AnimatedCell from "../../components/bento/animatedCell.astro";
import Embeddable from "../../components/pages/Embeddable.astro";
import Header from "../../components/layouts/headerToolbar.astro";

// Server-side achievement data
const information = [
  {
    badges: ["A+"],
    title: "AP CSP / Computer Science Principles",
    description: "Advanced Placement course in computer science principles.",
    date: "2024",
    customClass: "max-w-1/4 min-w-[20vh] max-h-[40vh]",
    tag: "APCSP",
    link: "/education#APCSP",
    renderLink: "/education/APCSP",
  },
  {
    badges: ["AP 4"],
    title: "AP CSP Exam",
    description: "AP Computer Science Principles exam.",
    date: "2024",
    customClass: "max-w-1/4 min-w-[20vh] max-h-[40vh]",
    tag: "APCSPExam",
    modalTitle: "AP Computer Science Principles",
    link: "/education#APCSPExam",
    renderLink: "/education/APCSP",
  },
];
---

<Root title="Education - Justinwhite.work" bgimgurl="/backgrounds/defbg4.png">
  <div
    id="page-container"
    class="flex flex-col h-screen w-screen gap-2 p-2"
  >
    <header id="page-header" class="navbar">
      <Header id="page-header" />
    </header>

    <div class="flex flex-1 gap-2 min-h-0">
      <aside id="page-sidebar" class="menu w-20 hidden md:block">
        <Sidenav />
      </aside>

      <main class="card flex-1 overflow-y-auto overflow-x-hidden">
        <div class="flex h-full min-h-0 gap-4">
          <!-- Main content -->
          <div class="max-w-full">
            <Embeddable class="min-w-[60vh] h-full bg-base-100/70">
              <h1 class="text-3xl font-bold">
                AP Computer Science Principles (AP CSP)
              </h1>
              <p>
                AP CSP gave me a solid foundation in the fundamental logic
                behind computers. The course included a crash course in Python
                and provided opportunities to build numerous micro-projects that
                reinforced concepts in programming, algorithms, and
                computational thinking.
              </p>
              <h2 class="text-2xl font-semibold">Primary Achievement</h2>
              <p>
                My main project was developing a <span
                  class="tooltip underline"
                  data-tip="Provided useful utility functions for reading/writing individual pixels, not directly exposed by the gfx library."
                >
                  <strong>rendering utility library</strong>
                </span> for the graphics tool in our environment. Using only Python’s
                built-in math utilities (no external libraries), I implemented <span
                  class="tooltip underline"
                  data-tip="Perlin noise is smooth, pseudo-random noise for natural textures."
                >
                  <strong>Perlin Noise</strong>
                </span> directly on the canvas. I extended the library for a prototype
                that could <span
                  class="tooltip underline"
                  data-tip="Encoding/Hashing algorithms convert raw data to a simpler format that is easier to transmit, compress and obfuscate."
                >
                  <strong
                    >encode the canvas to a hash (and then back again)</strong
                  >
                </span>, demonstrating algorithmic skill, creative
                problem-solving, and technical independence.
              </p>
              <h2 class="text-2xl font-semibold">
                Other Projects & Micro-Achievements
              </h2>
              <ul class="list-disc list-inside space-y-1">
                <li>
                  Built micro-projects exploring loops, conditionals, and data
                  structures
                </li>
                <li>
                  Created small games and visualizations to test algorithmic
                  thinking
                </li>
                <li>
                  Optimized rendering performance for complex graphical features
                </li>
                <li>
                  Developed debugging and iterative design skills through
                  repeated testing
                </li>
                <li>
                  Experimented with data serialization techniques for storing
                  project state
                </li>
                <li>
                  Learned to modularize code for reuse across multiple projects
                </li>
              </ul>
              <h2 class="text-2xl font-semibold">Exam & Results</h2>
              <p>
                Completed the AP CSP Exam, earning a <span
                  class="tooltip underline"
                  data-tip="Scores are on a zero to five range. Four demonstrates near mastery."
                >
                  <strong>four</strong>
                </span>, demonstrating strong proficiency in programming
                concepts, data analysis, and understanding the broader impacts
                of computing on society.
              </p>
              <p>
                Overall, AP CSP honed my programming foundations, provided
                hands-on project experience, and taught me to approach technical
                challenges creatively—skills that I continue to apply in larger
                software projects today.
              </p>
            </Embeddable>
          </div>

          <!-- Procedural cells stacked vertically -->
          <div class="flex flex-col gap-4">
            {
              information.map((ach, i) => (
                <Embeddable
                  key={i}
                  class={`bg-base-100/70 flex flex-col justify-between ${ach.customClass}`}
                >
                  <div class="space-y-4">
                    <h2 class="text-2xl font-bold text-primary flex flex-wrap items-center gap-2">
                      {ach.badges.map((b, j) => (
                        <span
                          key={j}
                          class={`badge ${j === ach.badges.length - 1 ? "badge-primary" : "badge-outline"}`}
                        >
                          {b}
                        </span>
                      ))}
                      {ach.title}
                    </h2>
                    <p class="text-sm text-primary opacity-60">
                      {ach.description}
                    </p>
                  </div>
                  <span class="text-xs font-light text-gray-500 mt-auto">
                    {ach.date}
                  </span>
                </Embeddable>
              ))
            }
          </div>
        </div>
      </main>
    </div>
  </div>
</Root>
